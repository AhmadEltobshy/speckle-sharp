<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Speckle.ConnectorDynamo.ReceiveNode.Receive.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAABgGlDQ1BzUkdCIElFQzYxOTY2LTIuMQAA
        KM+Vkc8rRFEUxz8G+TGEWFhYvDSsZjSoiY0y0lCTNEb5tZl55oeaH6/3ZpJsla2ixMavBX8BW2WtFJGS
        lYU1sUHPuWZqJmXh3u45n/u995zuORcc4ZSetqq8kM7kzFDAr83Mzmk1T9TRghM3WkS3jOHJySB/jvdb
        KpS/9qhc/G84F2OWDhW1wkO6YeaEx4SDyzlD8ZZwm56MLAqfCLtNeaDwjdKjBX5WnCjwp2IzHBqR2pqF
        tUQZR8tYT5ppYakcVzqV14vvUZU0xDLTU+I7ZXVgESKAH41xRhnBRy+DYn146KNHdvwR7/2JnyArsbpY
        gxVMlkiQJKd6S16yx8THRY/JTLGi+v+7r1a8v6+QvcEP1Y+2/doFNZvwtWHbHwe2/XUIlQ9wninFZ/dh
        4E30jZLm2oOmNTi9KGnRbThbh/Z7I2JGfqRKWY54HF6OoXEWWq+gfr7Qs+I5R3cQXpWvuoSdXeiW+00L
        32wDZ+jpSEtjAAAACXBIWXMAAAsTAAALEwEAmpwYAAAEyklEQVR4Xu3YX2iVdRzHcQcZ5Fo3Fa5mdzrT
        yLDUGS3Q6SoKI/8RZKllQVTqYlGYtWiQUVMX5YXT9KJSh0oFqa0WtDmbwjan2ww2mzYtNVGnpoE+5znr
        /WvP6HR8jhGN8jnfzxted4Pt/L4fmG6AUkoppZRSSimllFJKKaWUUkoppZRSSimllFLqMi3+pmcQspGL
        MSjAVIwMvkRdiXGgTNyE4RiHyZiGuViA11CGCmzAVtRhLw7iFDz0pPArCoNvp/ojHjQDWcjBCOShENPx
        JIpQgqVYhUpsww60ogvdiCHsaP3tIh4Lfny78QjucNdhCEZiPO7DTMzDi3gDy7AaG1GFerThEE7DR9hD
        X8niKA6eIv2a9363O2A51mATvsJO7MNhnIV7hLDHscSNOyN4tvRpdH7znrnLTzYkfVgJtw5XB0+XHo2+
        p7kD3qMlR93v2bAPLX9Vjazg+aJfMIAeZ8oLXTVJH1bCNWFw8ITRLnEAzqRZ+2terY7rd/7f68TQ4Bmj
        W/IAnPyHv69fVOVfSPrAcqnjGBM8ZTQLG4CTV9jS/PKWmPsfQNgHlz+dw/3Bc0Yvjh06AGfMhD3txZ9e
        OJb0gdPR+UXV8V9e+Tp+8KWq+L6ibfHdz38R3/XM5/EdszfHa2dW+jVTPvFrJq31t99dEau/Y0WsIfe9
        2N5byrz2G9/2DmeVeg3Bc0YvDp1yAM6d9zYfXrD+N/en07CH+1/xb5W+wx3gcG0cruk5Dvc0h3siONxD
        H/s1BRxufN/hymMtHK7jhiXeT9eWeqcHlnixq0q8nn+pI3jO6MWRLzuAP+Q3n3x29Vn3F73QQ/xDcQ53
        jsMd43Cd7nALew+3k8PVPb7Zr52xwf/WHW7iWr/OHW7UiljjMA435F1v//VLvJ8zS70z/XS4/pLmA+h1
        fnbZiV0c7iiH+6G493CN7nDzPuNwm/za6RzuwY/82olr/Lq8lbGdoz6INQ4tj7XmuMO95R3JfNM7y2P5
        SY+XDkwMoOf2CS1NIR9eNADzNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjIj2A9uRDp6IBpBTpATyAc4mHTkUDSCm6A3Bx3LE4nnjsMBpAStEegIsDD0Vn4sGTaQAp
        RX8ALo48GLsTj55IA0gpPQbg4tBZqE48fB8NIKX0GYCLYw/EusTjOxpASuk1ABcHz8AyDcDzcQaH0IZ6
        VGEjPsRyzA+eLf3i8MWIR3AAMXSjC634Dl+iEquwFCUowlOYgULkYQRykIWM4CnsxvFn4eJ/NAAPp/Aj
        WlCHrdiACpThdSzEXEzDZIzDrbgZmcGPrvorBlB4W0HrDh437GjORZzAAezBdmzBeqzEO1iM+ZiDqZiE
        schFNgYF305diWXPOTKcIz2CibgLwzAY1wRfopRSSimllFJKKaWUUkoppZRSSimllFJKKaWUurQBA34H
        aHZk8Q+H6SYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="Speckle.ConnectorDynamo.ReceiveNode.Receive.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgWlDQ1BzUkdCIElFQzYxOTY2LTIuMQAA
        KM+VkbtLA0EQh78kSuILBS0sLIJEqygxQtBGMEGiECTECEZtkstLyOO4S5BgK9gGFEQbX4X+BdoK1oKg
        KIJYWVgr2qicc0aICBbusDvf/nZn2JkFazSn5PUGD+QLJS0S9DvnYvNO+wNN2HAwij2u6Op4OBziz/F6
        jcX0lwNmLv43WpIpXQGLQ3hMUbWS8KRwaLmkmrwh3KVk40nhI2G3Jg8UvjL1RI0fTc7U+N1kLRoJSG0d
        ws7MD078YCWr5YWlclz5XFn5fo9ZSWuqMDsjvldmDzoRgvhxMsUEAXwMSV98YgN4GZQdf8R7vuKnKUqs
        IqtKBY0lMmQp4Ra1LNlT4tOip8RyVMz+/+6rnh721rK3+qHx3jCe+8C+Dh9Vw3jbM4yPfbDdwWmhHl/c
        hZEX0at1zbUD7atwfFbXEptwsgbdt2pci39JNpnWdBqeDqEtBp0X0LxQ69n3OQc3EF2RrzqHrW3ol/vt
        i58sMGfLe3/YTQAAAAlwSFlzAAALEwAACxMBAJqcGAAAASZJREFUWEftzj8ohHEcx/FnMLlJUmR9ihJy
        ReomsXGF8SYKxeAWJX/LYjhJUeoMZ7iB1eAJJyll8CcJk4zKKbrTleF5nt/jrX6D5PQ8Z7B83/Vav9+P
        IUmSn2YOvRBqUI82dKEfg4hjDkvYwDYs7MPUJ4IXid71jG0WLjjiwCtRFmF9MlgtkasYcsPruetvR4tR
        0xlVmMqop8kD9TCxp27jlroc2VFHDatOoz7rPz3Aw3t0OW91p93jjpR70p50TpvWnHNzxbmpTdj3lYv2
        Y2jBzpfN2y68ImL6rP++DPCqhp7PfjgahAyQATJABsgAGVDSgGa8/duAz3geRvYPA2y8olefDB4DzIrR
        lxRHdrGFJBKYxTgG0IdOtKIO1SjXJyRJ+iXD+ACkLKpFnQJnVAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="Speckle.ConnectorDynamo.SendNode.Send.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAABgGlDQ1BzUkdCIElFQzYxOTY2LTIuMQAA
        KM+Vkc8rRFEUxz8G+TGEWFhYvDSsZjSoiY0y0lCTNEb5tZl55oeaH6/3ZpJsla2ixMavBX8BW2WtFJGS
        lYU1sUHPuWZqJmXh3u45n/u995zuORcc4ZSetqq8kM7kzFDAr83Mzmk1T9TRghM3WkS3jOHJySB/jvdb
        KpS/9qhc/G84F2OWDhW1wkO6YeaEx4SDyzlD8ZZwm56MLAqfCLtNeaDwjdKjBX5WnCjwp2IzHBqR2pqF
        tUQZR8tYT5ppYakcVzqV14vvUZU0xDLTU+I7ZXVgESKAH41xRhnBRy+DYn146KNHdvwR7/2JnyArsbpY
        gxVMlkiQJKd6S16yx8THRY/JTLGi+v+7r1a8v6+QvcEP1Y+2/doFNZvwtWHbHwe2/XUIlQ9wninFZ/dh
        4E30jZLm2oOmNTi9KGnRbThbh/Z7I2JGfqRKWY54HF6OoXEWWq+gfr7Qs+I5R3cQXpWvuoSdXeiW+00L
        32wDZ+jpSEtjAAAACXBIWXMAAAsTAAALEwEAmpwYAAAEyklEQVR4Xu3YX2iVdRzHcQcZ5Fo3Fa5mdzrT
        yLDUGS3Q6SoKI/8RZKllQVTqYlGYtWiQUVMX5YXT9KJSh0oFqa0WtDmbwjan2ww2mzYtNVGnpoE+5znr
        /WvP6HR8jhGN8jnfzxted4Pt/L4fmG6AUkoppZRSSimllFJKKaWUUkoppZRSSimllFLqMi3+pmcQspGL
        MSjAVIwMvkRdiXGgTNyE4RiHyZiGuViA11CGCmzAVtRhLw7iFDz0pPArCoNvp/ojHjQDWcjBCOShENPx
        JIpQgqVYhUpsww60ogvdiCHsaP3tIh4Lfny78QjucNdhCEZiPO7DTMzDi3gDy7AaG1GFerThEE7DR9hD
        X8niKA6eIv2a9363O2A51mATvsJO7MNhnIV7hLDHscSNOyN4tvRpdH7znrnLTzYkfVgJtw5XB0+XHo2+
        p7kD3qMlR93v2bAPLX9Vjazg+aJfMIAeZ8oLXTVJH1bCNWFw8ITRLnEAzqRZ+2terY7rd/7f68TQ4Bmj
        W/IAnPyHv69fVOVfSPrAcqnjGBM8ZTQLG4CTV9jS/PKWmPsfQNgHlz+dw/3Bc0Yvjh06AGfMhD3txZ9e
        OJb0gdPR+UXV8V9e+Tp+8KWq+L6ibfHdz38R3/XM5/EdszfHa2dW+jVTPvFrJq31t99dEau/Y0WsIfe9
        2N5byrz2G9/2DmeVeg3Bc0YvDp1yAM6d9zYfXrD+N/en07CH+1/xb5W+wx3gcG0cruk5Dvc0h3siONxD
        H/s1BRxufN/hymMtHK7jhiXeT9eWeqcHlnixq0q8nn+pI3jO6MWRLzuAP+Q3n3x29Vn3F73QQ/xDcQ53
        jsMd43Cd7nALew+3k8PVPb7Zr52xwf/WHW7iWr/OHW7UiljjMA435F1v//VLvJ8zS70z/XS4/pLmA+h1
        fnbZiV0c7iiH+6G493CN7nDzPuNwm/za6RzuwY/82olr/Lq8lbGdoz6INQ4tj7XmuMO95R3JfNM7y2P5
        SY+XDkwMoOf2CS1NIR9eNADzNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADjNADj
        NADjNADjNADjIj2A9uRDp6IBpBTpATyAc4mHTkUDSCm6A3Bx3LE4nnjsMBpAStEegIsDD0Vn4sGTaQAp
        RX8ALo48GLsTj55IA0gpPQbg4tBZqE48fB8NIKX0GYCLYw/EusTjOxpASuk1ABcHz8AyDcDzcQaH0IZ6
        VGEjPsRyzA+eLf3i8MWIR3AAMXSjC634Dl+iEquwFCUowlOYgULkYQRykIWM4CnsxvFn4eJ/NAAPp/Aj
        WlCHrdiACpThdSzEXEzDZIzDrbgZmcGPrvorBlB4W0HrDh437GjORZzAAezBdmzBeqzEO1iM+ZiDqZiE
        schFNgYF305diWXPOTKcIz2CibgLwzAY1wRfopRSSimllFJKKaWUUkoppZRSSimllFJKKaWUurQBA34H
        aHZk8Q+H6SYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="Speckle.ConnectorDynamo.SendNode.Send.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABgWlDQ1BzUkdCIElFQzYxOTY2LTIuMQAA
        KM+VkbtLA0EQh78kSuILBS0sLIJEqygxQtBGMEGiECTECEZtkstLyOO4S5BgK9gGFEQbX4X+BdoK1oKg
        KIJYWVgr2qicc0aICBbusDvf/nZn2JkFazSn5PUGD+QLJS0S9DvnYvNO+wNN2HAwij2u6Op4OBziz/F6
        jcX0lwNmLv43WpIpXQGLQ3hMUbWS8KRwaLmkmrwh3KVk40nhI2G3Jg8UvjL1RI0fTc7U+N1kLRoJSG0d
        ws7MD078YCWr5YWlclz5XFn5fo9ZSWuqMDsjvldmDzoRgvhxMsUEAXwMSV98YgN4GZQdf8R7vuKnKUqs
        IqtKBY0lMmQp4Ra1LNlT4tOip8RyVMz+/+6rnh721rK3+qHx3jCe+8C+Dh9Vw3jbM4yPfbDdwWmhHl/c
        hZEX0at1zbUD7atwfFbXEptwsgbdt2pci39JNpnWdBqeDqEtBp0X0LxQ69n3OQc3EF2RrzqHrW3ol/vt
        i58sMGfLe3/YTQAAAAlwSFlzAAALEwAACxMBAJqcGAAAASZJREFUWEftzj8ohHEcx/FnMLlJUmR9ihJy
        ReomsXGF8SYKxeAWJX/LYjhJUeoMZ7iB1eAJJyll8CcJk4zKKbrTleF5nt/jrX6D5PQ8Z7B83/Vav9+P
        IUmSn2YOvRBqUI82dKEfg4hjDkvYwDYs7MPUJ4IXid71jG0WLjjiwCtRFmF9MlgtkasYcsPruetvR4tR
        0xlVmMqop8kD9TCxp27jlroc2VFHDatOoz7rPz3Aw3t0OW91p93jjpR70p50TpvWnHNzxbmpTdj3lYv2
        Y2jBzpfN2y68ImL6rP++DPCqhp7PfjgahAyQATJABsgAGVDSgGa8/duAz3geRvYPA2y8olefDB4DzIrR
        lxRHdrGFJBKYxTgG0IdOtKIO1SjXJyRJ+iXD+ACkLKpFnQJnVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>